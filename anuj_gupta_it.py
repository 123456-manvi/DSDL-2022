# -*- coding: utf-8 -*-
"""Anuj Gupta_it.ipynb

Automatically generated by Colaboratory.


# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd

import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from matplotlib import rcParams
from matplotlib.cm import rainbow
from sklearn.preprocessing import LabelEncoder
# %matplotlib inline
import warnings
warnings.filterwarnings('ignore')

from sklearn.neighbors import KNeighborsClassifier
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier

df = pd.read_csv('heart.csv')
df['HeartDisease'].astype(float)

df.info()

df.describe()

import seaborn as sns
corrmat = df.corr()
top_corr_features = corrmat.index
plt.figure(figsize=(20,20))
g=sns.heatmap(df[top_corr_features].corr(),annot=True,cmap="RdYlGn")

df.hist()

sns.set_style('whitegrid')
sns.countplot(x='HeartDisease',data=df,palette='RdBu_r')

dataset = pd.get_dummies(df, columns = ['Age','ExerciseAngina','Oldpeak','ChestPainType'])

Label_Encoder= LabelEncoder()
df['HeartDisease'] = Label_Encoder.fit_transform(df['HeartDisease'])

X=df.drop('HeartDisease',axis= 1)
Y = df['HeartDisease']

y=df[['HeartDisease']]

x=df[['ChestPainType','RestingBP','Cholesterol','MaxHR','ST_Slope']]

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size = 0.3)

from sklearn.metrics import accuracy_score

from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import cross_val_score

accuracy_rate=[]

for i in range(1,40):
    classifier= KNeighborsClassifier(n_neighbors =i)
    score = cross_val_score(classifier,X,Y,cv=10)
    accuracy_rate.append(score.mean())

plt.plot(range(1,40),accuracy_rate, color= 'green',linestyle = 'dashed',marker='*', markersize=10)
plt.title('Accuracy Rate vs K-Value')
plt.xlabel('K-Value')
plt.ylabel('Accuracy_Rate')

